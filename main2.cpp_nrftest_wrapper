#include <Arduino.h>
#include <networking/Layer2rf24.h>
#include <networking/Layer3.h>

#define SERVER

#ifdef SERVER
	#define address1 0x1000
	#define address2 0x1001
#else
	#define address1 0x1001
	#define address2 0x1000
#endif

#define PIN_CE 11
#define PIN_CSN 10
Layer2rf24* network;
Layer3* l3;

void setup() {
	Serial.begin(115200);
	#ifdef SERVER
		Serial.println("start server...");
	#else
		Serial.println("start client...");
	#endif
	l3 = new Layer3(address1);
	network = new Layer2rf24(l3, PIN_CE, PIN_CSN, address1);
}

void loop() {
	#ifndef SERVER
		uint8_t val = 0;
		val += network->receive();
		delay(110);
		if(val > 0) {
			Serial.print(millis());
			Serial.print(": receive()=");
			Serial.println(val);
			while(network->receiveQueueSize() > 0) {
				Layer2rf24::frame_t f;
				network->receiveQueuePop(&f);

				Serial.print("  ");
				Serial.print("from 0x");
				Serial.print(f.data.source, HEX);
				Serial.print(" to 0x");
				Serial.print(f.data.destination, HEX);
				Serial.print(": ");
				Serial.println(f.data.payload[0]);
			}
		}
	#else
		delay(20);
		boolean succ = false;

		Layer2rf24::frame_t frame2;
		memset(&frame2, 0, sizeof(Layer2rf24::frame_t));
		frame2.data.destination = address2;//0x000000FFFFLL
		frame2.data.source = address1;
		frame2.data.payloadLen = 1;
		frame2.data.payload[0] = 9;
		succ = network->sendFrame(&frame2);
		Serial.print(millis());
		Serial.print(": sent packet to 0x");
		Serial.print(frame2.data.destination, HEX);
		Serial.print(" - ");
		Serial.println((succ) ? "acked." : "fail!");

		Layer2rf24::frame_t frame;
		memset(&frame, 0, sizeof(Layer2rf24::frame_t));
		frame.data.destination = 0x000000FFFFLL;//address2
		frame.data.source = address1;
		frame.data.payloadLen = 1;
		frame.data.payload[0] = 4;
		network->sendFrame(&frame);
		Serial.print(millis());
		Serial.print(": sent packet to 0x");
		Serial.print(frame.data.destination, HEX);
		Serial.print(" - ");
		Serial.println((succ) ? "acked." : "fail!");
	#endif
}
