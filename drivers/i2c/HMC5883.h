/**
 * major parts taken from http://learn.parallax.com/KickStart/29133
 * Copyright: Creative Commons 3.0 SA license
 */
//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : HMC5883.h
//  @ Date : 20.10.2014
//  @ Author :
//
//


#if !defined(_HMC5883_H)
#define _HMC5883_H

#include <Arduino.h>
#include "MagneticField.h"

class HMC5883 : public I2C, public MagneticField {
	public:
		HMC5883() {
			this->address = 0x1E;
		}

		virtual Triple<int16_t> readMagnetic() {
			Triple<int16_t> magneticField;

			Wire.begin();
			Wire.beginTransmission(this->address);
			Wire.write(byte(0x02));

			//Wire.write(byte(0x00)); //continuous
			Wire.write(byte(0x01)); //single
			//Wire.write(byte(0x02)); //idle

			Wire.write(byte(0x03)); // Send request to X MSB register
			Wire.requestFrom(Addr, 6);    // Request 6 bytes; 2 bytes per axis

			if(Wire.available() <=6) { // If 6 bytes available
				magneticField.a = Wire.read() << 8 | Wire.read();
				magneticField.c = Wire.read() << 8 | Wire.read();
				magneticField.b = Wire.read() << 8 | Wire.read();
			}

			Wire.endTransmission();


			return magneticField;
		}

		virtual void readMagnetic( HardwareResult* hwresult ) {
			hwresult->setUintListNum(6);
			uint8_t[] list = hwresult->getUintList();

			Triple<int16_t> result = readMagnetic();
			list[0] = result.getA() >> 8;
			list[1] = result.getA() & 0xff;
			list[2] = result.getB() >> 8;
			list[3] = result.getB() & 0xff;
			list[4] = result.getC() >> 8;
			list[5] = result.getC() & 0xff;
		}

		virtual boolean readVal( HardwareTypeIdentifier type, HardwareResult* result ) {
			if(implementsInterface(type)) {
				readMagnetic(result);
				return true;
			}
			return false;
		}

		virtual boolean implementsInterface( HardwareTypeIdentifier type ) {
			if(type == HWType_magneticField)
				return true;
			return false;
		}

		virtual HardwareTypeIdentifier* getImplementedInterfaces(HardwareTypeIdentifier* arr, uint8_t maxLen) {
			I2C::getImplementedInterfaces(arr, maxLen);
			return this->addImplementedInterface(arr, maxLen, HWType_magneticField);
		}

};

#endif  //_HMC5883_H
