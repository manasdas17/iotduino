//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : DigitalIOGeneric.h
//  @ Date : 20.10.2014
//  @ Author :
//
//


#if !defined(_DIGITALIOGENERIC_H)
#define _DIGITALIOGENERIC_H

#include <Arduino.h>
#include "HardwareID.h"
#include "../drivers/digitalio/DigitalIO.h"
#include <dispatcher/Commands.h>


class DigitalIOGeneric : public DigitalIO {
	public:
		DigitalIOGeneric(uint8_t pin, uint8_t hwaddress) : DigitalIO(pin, hwaddress) {
		}

		DigitalIOGeneric(uint8_t pin, boolean pullup, uint8_t hwaddress) : DigitalIO(pin, pullup, hwaddress) {
		}

		virtual boolean read();
		virtual boolean outputRead();
		virtual void write(int boolean);
		virtual void toggle();

		virtual boolean implementsInterface( HardwareTypeIdentifier type );
		virtual boolean readVal( HardwareTypeIdentifier type, HardwareCommandResult* result );
		virtual boolean writeVal( HardwareTypeIdentifier type, HardwareCommandResult* result );

		virtual HardwareTypeIdentifier* getImplementedInterfaces(HardwareTypeIdentifier* arr, uint8_t maxLen) {
			return DigitalIO::getImplementedInterfaces(arr, maxLen);
		}

};
#endif  //_DIGITALIOGENERIC_H
