//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AnalogIO.h
//  @ Date : 20.10.2014
//  @ Author : 
//
//


#if !defined(_ANALOGIO_H)
#define _ANALOGIO_H

#include <Arduino.h>
#include "../../HardwareDriver.h"
#include "../../HardwareID.h"
#include "../multiplex/Multiplexible.h"
#include "../multiplex/NoMultiplex.h"

class AnalogIO : public HardwareDriver {
	protected:
		Multiplexible* pin;
		boolean pullup;
	public:
		AnalogIO(Multiplexible* pin) {
			this->pin = pin;
		}
		AnalogIO(uint8_t pin) {
			this->pin = new NoMultiplex(pin);
		}

		virtual uint8_t getPIN();

		virtual boolean implementsInterface( HardwareTypeIdentifier type ) = 0;

		virtual HardwareTypeIdentifier* getImplementedInterfaces(HardwareTypeIdentifier* arr, uint8_t maxLen) {
			return this->addImplementedInterface(arr, maxLen, HWType_ANALOG);
		}


};

#endif  //_ANALOGIO_H
