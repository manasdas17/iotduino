//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : DigitalIO.h
//  @ Date : 20.10.2014
//  @ Author : 
//
//


#if !defined(_DIGITALIO_H)
#define _DIGITALIO_H

#include <Arduino.h>
#include "../../HardwareDriver.h"
#include "../multiplex/Multiplexible.h"
#include "../multiplex/NoMultiplex.h"
#include "../multiplex/Multiplexed.h"

class DigitalIO : public HardwareDriver {
	protected:
		Multiplexible* pin;
		boolean pullup;

	public:
		//DigitalIO(Multiplexible* pin) {
			//this->pin = pin;
		//}
		DigitalIO(Multiplexible* pin, uint8_t hwaddress) : HardwareDriver(hwaddress) {
			this->pin = pin;
		}

		//DigitalIO(uint8_t pin) {
			//this->pin = new NoMultiplex(pin);
			//this->pullup = false;
		//}
		DigitalIO(uint8_t pin, uint8_t hwaddress) : HardwareDriver(hwaddress) {
			this->pin = new NoMultiplex(pin);
			this->pullup = false;
		}

		DigitalIO(uint8_t pin, boolean pullup, uint8_t hwaddress) : HardwareDriver(hwaddress) {
			this->pin = new NoMultiplex(pin);
			this->pullup = pullup;
		}

		virtual uint8_t getPIN();
		virtual boolean getPullUp();

		virtual boolean implementsInterface( HardwareTypeIdentifier type ) = 0;

		virtual boolean readVal( HardwareTypeIdentifier type, HardwareCommandResult* result ) = 0;

		virtual HardwareTypeIdentifier* getImplementedInterfaces(HardwareTypeIdentifier* arr, uint8_t maxLen) {
			return this->addImplementedInterface(arr, maxLen, HWType_DIGITAL);
		}

};

#endif  //_DIGITALIO_H
